@model DraperyOrderFormModel
@using Nop.Web.Models.Common;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts("RT RTB Drape Order Form");
    Html.AddScriptParts("https://code.jquery.com/ui/1.12.1/jquery-ui.js");
    Html.AddScriptParts("https://cdn.jsdelivr.net/npm/mathjs@8.0.1/lib/browser/math.min.js");
    Html.AddCssFileParts("//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css");
}
@using (Html.BeginForm())
{
    <div class="custom-page-box-border-less-div">
        <div class="breadcrumbs">
            <ol class="breadcrumb">

                <li><a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a></li>
                <li class="active">RT &amp; RTB Drape Order Form</li>

            </ol>
        </div>
    </div>
    <div>
        <h3 class="pull-left">
            RT &amp; RTB DRAPE ORDER FORM
        </h3>
        
    </div>
    <div class="custom-page-box-div" style="clear:both">
        @Html.AntiForgeryToken()
        <div class="text-danger">
            @ViewBag.Message
            @Html.ValidationSummary(true)
        </div>
        <div class="product-details">
            <table style="width:100%; border-spacing:5px; border-collapse:separate">
                <tr>
                    <td style="width:15%">Designer*</td>
                    <td>@Html.TextBoxFor(x => x.Designer, new { @class = "col-sm-7" })</td>
                </tr>
                <tr>
                    <td>Side Mark*</td>
                    <td>@Html.TextBoxFor(x => x.SideMark, new { @class = "col-sm-7" })</td>
                </tr>
                <tr>
                    <td>Phone*</td>
                    <td>@Html.TextBoxFor(x => x.Phone, new { @class = "col-sm-7" })</td>
                </tr>
                <tr>
                    <td>Order Date</td>
                    <td>@Html.TextBoxFor(x => x.OrderDate, new { @class = "col-sm-7, datepicker", autocomplete = "off" })</td>
                </tr>
                <tr>
                    <td>Due Date</td>
                    <td>@Html.TextBoxFor(x => x.DueDate, new { @class = "col-sm-7, datepicker", autocomplete = "off" })</td>
                </tr>
                
            </table>
        </div>
    </div>
    <div>
        <h4>
            Order Detail
        </h4>
    </div>
    <div class="custom-page-box-div" style="clear:both">
        <div class="product-details" style="margin-bottom:0">
            <button type="button" class="btn btn-primary" id="btnAddDetail">New Order Detail</button>
            <button type="button" class="btn btn-primary" id="btnReviewDetail">Review</button>
            @Html.HiddenFor(m => m.OrderDetailJsonStr, new { id = "hdOrderDetail" })
            <table style="width:100%" class="table table-bordered" id="tbOrderDetail">
                <thead>
                    <tr>
                        <th>Actions</th>
                        <th>Line</th>
                        <th>Room Location</th>
                        <th>Qty</th>
                        <th>Finished Width</th>
                        <th>Fabric Name &amp; Color</th>
                        <th>Lining Name &amp; Color</th>
                    </tr>

                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div style="margin-left:170px">
        @Html.HiddenFor(m => m.DisplayCaptcha)
        @if (Model.DisplayCaptcha)
        {
            <div class="captcha-box">
                @Html.Raw(Html.GenerateCaptcha())
            </div>
        }
    </div>
    <div class="text-center">
        <input type="submit" class="btn btn-primary" value="Download to Print" name="print" /> 
        <input type="submit" class="btn btn-primary" value="Submit" />  
    </div>
}
<div id="dialogOrderDetail">
    <p class="validateTips"></p>
    <table style="width:100%; border-spacing:5px; border-collapse:separate">
        <tr>
            <td>Line:</td>
            <td><label id="lbLine">1</label></td>
        </tr>
        <tr>
            <td>Room Location:</td>
            <td><input type="text" id="txtRoomLocation" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Qty*:</td>
            <td><input type="number" id="txtQty" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Finished Width*:</td>
            <td><input type="number" id="txtFinishedWidth" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>No. of Width:</td>
            <td><input type="text" id="txtNoOfWidth" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Finished Length:</td>
            <td><input type="text" id="txtFinishedLength" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Top Header:</td>
            <td><input type="number" id="txtTopHeader" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Top Pocket:</td>
            <td><input type="number" id="txtTopPocket" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Bottom Header:</td>
            <td><input type="number" id="txtBottomHeader" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Bottom Pocket:</td>
            <td><input type="number" id="txtBottomPocket" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Fabric Name & Color:</td>
            <td><input type="text" id="txFabricNameColor" class="col-sm-12" /></td>
        </tr>
        <tr>
            <td>Lining Name & Color:</td>
            <td><input type="text" id="txLiningNameColor" class="col-sm-12" /></td>
        </tr>

    </table>

</div>
<div id="dialogReviewOrderDetail" title="Review Order Detail">
    <table style="width:100%" class="table table-bordered" id="tbReviewOrderDetail">
        <thead>
            <tr>
                <th></th>
                <th>Actions</th>
                <th>Line</th>
                <th>Room Locations</th>
                <th>Qty</th>
                <th>Finished Width</th>
                <th>Fabric Name &amp; Color</th>
                <th>Lining Name &amp; Color</th>
            </tr>

        </thead>
        <tbody></tbody>
    </table>
</div>
<script>
    var orderDetails = [];
    var isAdding = true;
    var dialog,
        dialogReview,
        tips = $(".validateTips"),
        _line = $("#lbLine"),
        _roomLocation = $('#txtRoomLocation'),
        _qty = $('#txtQty'),
        _finishedWidth = $('#txtFinishedWidth'),
        _topHeader = $('#txtTopHeader'),
        _topPocket = $('#txtTopPocket'),
        _bottomHeader = $('#txtBottomHeader'),
        _bottomPocket = $('#txtBottomPocket'),
        _fabricNameColor = $('#txFabricNameColor'),
        _liningNameColor = $('#txLiningNameColor'),
        _noOfWidth = $('#txtNoOfWidth'),
        _finishedLength = $('#txtFinishedLength'),
        allFields = $([]).add(_roomLocation).add(_qty).add(_finishedWidth).add(_topHeader).add(_topPocket).add(_bottomHeader).add(_bottomPocket).add(_noOfWidth).add(_finishedLength)
        ;
   
    $(function () {
        $(".datepicker").datepicker();
        dialog = $("#dialogOrderDetail").dialog({
            autoOpen: false,
            modal: true,
            height: "auto",
            width: 500,
            buttons: {
                "Save": saveOrderDetailAndClose,
                "Save & Add New": saveAndNewDetail,
                "Save & Review": saveAndReview,
                Cancel: function () {
                    dialog.dialog("close");
                }
            }
        });
        dialogReview = $("#dialogReviewOrderDetail").dialog({
            autoOpen: false,
            modal: true,
            height: "auto",
            width: 1000,
            buttons: {
                Close: function () {
                    dialogReview.dialog("close");
                }
            }
        });
        $("#btnAddDetail").click(function () {
            if (orderDetails.length >= 9) {
                alert('We allow only 9 line items in an Order, if you need more than 9 then please create another order or call us!');
            }
            else {
                var obj = {
                    Line: orderDetails.length + 1,
                    RoomLocation: "",
                    Qty: 1,
                    FinishedWidth: "",
                    TopHeader: "",
                    TopPocket: "",
                    BottomHeader: "",
                    BottomPocket: "",
                    FabricNameColor: "",
                    LiningNameColor: "",
                    FinishedLength: "",
                    NoOfWidth: ""
                }
                isAdding = true;
                loadDetail(obj);
                allFields.removeClass("ui-state-error");
                tips.empty();
                $("#dialogOrderDetail").dialog("option", "title", "Add Order Detail").dialog("open");
            }

        });
        $("#tbOrderDetail a.edit").live("click", function () {
            var index = parseInt($(this).attr("myindex"));
            var obj = orderDetails[index];
            obj.Line = index + 1;
            isAdding = false;
            loadDetail(obj);
            allFields.removeClass("ui-state-error");
            $("#dialogOrderDetail").dialog("option", "title", "Edit Order Detail").dialog("open");
            return false;
        });
        $("#tbOrderDetail a.delete").live("click", function () {
            if (confirm("Do you want to delete this item?")) {
                orderDetails.splice(parseInt($(this).attr("myindex")), 1);
                $("#hdOrderDetail").val(JSON.stringify(orderDetails));
                loadGrid();
            }

            return false;
        });
        $("#tbReviewOrderDetail a.edit").live("click", function () {
            var index = parseInt($(this).attr("myindex"));
            var obj = orderDetails[index];
            obj.Line = index + 1;
            isAdding = false;
            loadDetail(obj);
            allFields.removeClass("ui-state-error");
            $("#dialogOrderDetail").dialog("option", "title", "Edit Order Detail").dialog("open");
            $("#dialogReviewOrderDetail").dialog("close");
            return false;
        });
        $("#tbReviewOrderDetail a.delete").live("click", function () {
            if (confirm("Do you want to delete this item?")) {
                orderDetails.splice(parseInt($(this).attr("myindex")), 1);
                $("#hdOrderDetail").val(JSON.stringify(orderDetails));
                loadGrid();
                loadReviewGrid();
            }

            return false;
        });
        $("#btnReviewDetail").click(function () {
            loadReviewGrid();
            dialogReview.dialog("open");
        });
       
        $("a.toggle-btn").live('click', function () {
            if ($(this).hasClass('collapsed')) {
                $(this).children('i').removeClass('glyphicon-minus-sign').addClass('glyphicon-plus-sign');
            }
            else {
                $(this).children('i').removeClass('glyphicon-plus-sign').addClass('glyphicon-minus-sign');
            }
        });
        function saveOrderDetail() {
            var valid = validateDetailForm();
            if (valid) {
                var objDetail = {
                    RoomLocation: _roomLocation.val(),
                    Qty: _qty.val(),
                    FinishedWidth: _finishedWidth.val(),
                    TopHeader: _topHeader.val(),
                    TopPocket: _topPocket.val(),
                    BottomHeader: _bottomHeader.val(),
                    BottomPocket: _bottomPocket.val(),
                    FabricNameColor: _fabricNameColor.val(),
                    LiningNameColor: _liningNameColor.val(),
                    NoOfWidth: _noOfWidth.val(),
                    FinishedLength: _finishedLength.val()

                };
                if (isAdding) {//add
                    orderDetails.push(objDetail);
                }
                else {//edit
                    orderDetails[parseInt(_line.text()) - 1] = objDetail;
                }
                $("#hdOrderDetail").val(JSON.stringify(orderDetails));
                loadGrid();
            }
            return valid;
        }
        function saveOrderDetailAndClose() {
            var valid = saveOrderDetail();
            if (valid) {
                dialog.dialog("close");
            }
            return valid;
        }
        function saveAndReview() {
            var valid = saveOrderDetail();
            if (valid) {
                dialog.dialog("close");
                loadReviewGrid();
                dialogReview.dialog("open");
            }
            return valid;

        }
        function validateDetailForm() {
            var valid = true;
            allFields.removeClass("ui-state-error");
            valid = valid && checkNumber(_qty, "Quantity", true, 1);
            valid = valid && checkNumber(_finishedWidth, "Finished Width", true, 1);
            valid = valid && checkFraction(_noOfWidth, "No. of Width", false, 1);
            valid = valid && checkFraction(_finishedLength, "Finished Length", false, 1);

            valid = valid && checkNumber(_topHeader, "Top Header", false, 0);
            valid = valid && checkNumber(_topPocket, "Top Pocket", false, 0);
            valid = valid && checkNumber(_bottomHeader, "Bottom Header", false, 0);
            valid = valid && checkNumber(_bottomPocket, "Bottom Pocket", false, 0);
            
            return valid;
        }
        function saveAndNewDetail() {
            var valid = saveOrderDetail();
            if (valid) {
                if (orderDetails.length >= 9) {
                    dialog.dialog("close");
                }
                else {
                    var obj = {
                        Line: orderDetails.length + 1,
                        RoomLocation: "",
                        Qty: 1,
                        FinishedWidth: "",
                        TopHeader: "",
                        TopPocket: "",
                        BottomHeader: "",
                        BottomPocket: "",
                        FabricNameColor: "",
                        LiningNameColor: "",
                        NoOfWidth: "",
                        FinishedLength: ""
                    }
                    isAdding = true;
                    loadDetail(obj);
                    allFields.removeClass("ui-state-error");
                    tips.empty();
                    $("#dialogOrderDetail").dialog("option", "title", "Add Order Detail");
                }
            }
            return valid;

        }
        function checkNumber(o, n, isRequired, min) {
            if (o.val() === '' && isRequired) {
                o.addClass("ui-state-error");
                updateTips(n + " cannot empty");
                return false;
            }
            if (isNaN(o.val())) {
                o.addClass("ui-state-error");
                updateTips(n + " must be number");
                return false;
            }
            if (parseFloat(o.val()) < min) {
                o.addClass("ui-state-error");
                updateTips(n + " must be larger than " + min);
                return false;
            } else {
                return true;
            }
        }
        function checkFraction(o, n, isRequired, min) {
            if (o.val() === '' && isRequired) {
                o.addClass("ui-state-error");
                updateTips(n + " cannot empty");
                return false;
            }
            var _arrNo = o.val().split(' ');
            if (_arrNo.length > 2) {
                o.addClass("ui-state-error");
                updateTips(n + " must be number or fraction");
                return false;
            }
            var no1 = _arrNo[0];
            if (isNaN(no1)) {
                o.addClass("ui-state-error");
                updateTips(n + " must be number or fraction");
                return false;
            }
            if (_arrNo.length === 1) {
                if (parseFloat(no1) < min) {
                    o.addClass("ui-state-error");
                    updateTips(n + " must be larger than " + min);
                    return false;
                }
            }
            else {
                var no2 = _arrNo[1];
                try {
                    var f2 = math.fraction(no2);
                    if (parseFloat(no1) + f2 < min) {
                        o.addClass("ui-state-error");
                        updateTips(n + " must be larger than " + min);
                        return false;
                    }
                } catch (e) {
                    o.addClass("ui-state-error");
                    updateTips(n + " must be number or fraction");
                    return false;
                }



            }

            return true;
        }
        function updateTips(t) {
            tips
                .text(t)
                .addClass("ui-state-highlight");
            setTimeout(function () {
                tips.removeClass("ui-state-highlight", 1500);
            }, 500);
        }
        function loadDetail(obj) {
            _line.text(obj.Line);
            _roomLocation.val(obj.RoomLocation);
            _qty.val(obj.Qty);
            _finishedWidth.val(obj.FinishedWidth);
            _topHeader.val(obj.TopHeader);
            _topPocket.val(obj.TopPocket);
            _bottomHeader.val(obj.BottomHeader);
            _bottomPocket.val(obj.BottomPocket);
            _fabricNameColor.val(obj.FabricNameColor);
            _liningNameColor.val(obj.LiningNameColor);
            _noOfWidth.val(obj.NoOfWidth);
            _finishedLength.val(obj.FinishedLength);
        }

        function loadGrid() {
            $("#tbOrderDetail tbody").empty();
            if (orderDetails.length === 0) {
                $("#tbOrderDetail tbody").html('<tr><td colspan="9" class="text-center">No data to display</td></tr>');
            }
            else {
                $.each(orderDetails, function (i, val) {
                    var _content = '<tr>';
                    _content += '<td><a href="#" class="edit" myIndex="' + i + '">Edit</a> | <a href="#" class="delete" myIndex="' + i + '">Delete</a></td>';
                    _content += '<td>' + (i + 1) + '</td>';
                    _content += '<td>' + val.RoomLocation + '</td>';
                    _content += '<td>' + val.Qty + '</td>';
                    _content += '<td>' + val.FinishedWidth + '</td>';
                    _content += '<td>' + val.FabricNameColor + '</td>';
                    _content += '<td>' + val.LiningNameColor + '</td>';

                    _content += '</tr>';

                    $("#tbOrderDetail tbody").append(_content);
                });

            }
        }
        function loadReviewGrid() {
            $("#tbReviewOrderDetail tbody").empty();
            if (orderDetails.length === 0) {
                $("#tbReviewOrderDetail tbody").html('<tr><td colspan="8" class="text-center">No data to display</td></tr>');
            }
            else {
                $.each(orderDetails, function (i, val) {
                    var _content = '<tr>';
                    _content += '<td><a href="javascript:void(0);" data-toggle="collapse" data-target="#detail_' + i + '" class="accordion-toggle toggle-btn"><i class="glyphicon glyphicon-plus-sign"></i></a></td> ';
                    _content += '<td><a href="#" class="edit" myindex="' + i + '">Edit</a> | <a href="#" class="delete" myindex="' + i + '">Delete</a></td>';
                    _content += '<td>' + (i + 1) + '</td>';
                    _content += '<td>' + val.RoomLocation + '</td>';
                    _content += '<td>' + val.Qty + '</td>';
                    _content += '<td>' + val.FinishedWidth + '</td>';
                    _content += '<td>' + val.FabricNameColor + '</td>';
                    _content += '<td>' + val.LiningNameColor + '</td>';
                    _content += '<tr class="accordian-body collapse" id="detail_' + i + '">';
                    _content += '<td colspan="9">';
                    _content += '<div>';
                    _content += '<table style="width:100%" >';

                    _content += '<tr>';
                    _content += '<td>Room Locations:</td>';
                    _content += '<td>' + val.RoomLocation + '</td>';
                    _content += '<td style="width:50px"></td>';
                    _content += '<td>Qty:</td>';
                    _content += '<td>' + val.Qty + '</td>';
                    _content += '</tr>';

                    _content += '<tr>';
                    _content += '<td>Finished Width:</td>';
                    _content += '<td>' + val.FinishedWidth + '</td>';
                    _content += '<td></td>';
                    _content += '<td>No. of Width</td>';
                    _content += '<td>' + val.NoOfWidth + '</td>';
                    _content += '</tr>';

                    _content += '<tr>';
                    _content += '<td>Finished Length:</td>';
                    _content += '<td>' + val.FinishedLength + '</td>';
                    _content += '<td></td>';
                    _content += '<td></td>';
                    _content += '<td></td>';
                    _content += '</tr>';

                    _content += '<tr>';
                    _content += '<td>Top Header:</td>';
                    _content += '<td>' + val.TopHeader + '</td>';
                    _content += '<td></td>';
                    _content += '<td>Top Pocket:</td>';
                    _content += '<td>' + val.TopPocket + '</td>';
                    _content += '</tr>';

                    _content += '<tr>';
                    _content += '<td>Bottom Header:</td>';
                    _content += '<td>' + val.BottomHeader + '</td>';
                    _content += '<td></td>';
                    _content += '<td>Bottom Pocket:</td>';
                    _content += '<td>' + val.BottomPocket + '</td>';
                    _content += '</tr>';

                    _content += '<tr>';
                    _content += '<td>Fabric Name & Color:</td>';
                    _content += '<td>' + val.FabricNameColor + '</td>';
                    _content += '<td></td>';
                    _content += '<td>Lining Name & Color:</td>';
                    _content += '<td>' + val.LiningNameColor + '</td>';
                    _content += '</tr>';

                    _content += '</table>';
                    _content += '</div>';
                    _content += '</td>';

                    _content += '</tr>';
                    $("#tbReviewOrderDetail>tbody").append(_content);
                });
            }
        }
        if ($("#hdOrderDetail").val() !== '') {
            orderDetails = JSON.parse($("#hdOrderDetail").val());
        }
        loadGrid();
    });

</script>
@if (ViewBag.DownloadFileUrl != null)
{
    <script>
        setTimeout(function () { window.open('@ViewBag.DownloadFileUrl', '_self'); },500);
    </script>
}




